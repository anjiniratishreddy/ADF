{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ratishdatafactory"
		},
		"LS_AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureBlobStorage'"
		},
		"LS_AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSynapseAnalytics'"
		},
		"LS_PostgreSql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_PostgreSql'"
		},
		"LS_PostgreSql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_PostgreSql2'"
		},
		"LS_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLDB'"
		},
		"LS_adlsG2_jan_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_adlsG2_jan'"
		},
		"LS_adlsg2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_adlsg2'"
		},
		"LS_AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://myratishkeyvault.vault.azure.net/"
		},
		"LS_adlsG2_jan_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myratishadlsg2.dfs.core.windows.net"
		},
		"LS_adlsg2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myratishadlsg2.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyCandidatesJSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyJSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Age']"
										},
										"sink": {
											"name": "age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['DOB']"
										},
										"sink": {
											"name": "dob",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['rows']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "JsonADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_candidates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JsonADLS')]",
				"[concat(variables('factoryId'), '/datasets/DS_candidates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyEducationJson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyJSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "Sid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['age']"
										},
										"sink": {
											"name": "age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['results']['school']"
										},
										"sink": {
											"name": "rslt_Scl",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['results']['high_school']"
										},
										"sink": {
											"name": "rslt_Hgscl",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['results']['graduation']"
										},
										"sink": {
											"name": "rslt_grad",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['education']['graduation']['major']"
										},
										"sink": {
											"name": "grad_maj",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['education']['graduation']['minor']"
										},
										"sink": {
											"name": "grad_min",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['details']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "ADLSEducation",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_education",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLSEducation')]",
				"[concat(variables('factoryId'), '/datasets/DS_education')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetFilesMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_src_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_csv_filesource",
											"type": "DatasetReference",
											"parameters": {
												"FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_sink_store",
											"type": "DatasetReference",
											"parameters": {
												"name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_src_folder')]",
				"[concat(variables('factoryId'), '/datasets/DS_csv_filesource')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoGreenLoadDim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "item",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WT/QTY",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WT_QT",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_src_GoGreenDim",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sink_vegfrt_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_src_GoGreenDim')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_vegfrt_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoGreenLoadDimWithNewProd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SCD2",
				"activities": [
					{
						"name": "LoadNewProds",
						"description": "SCD2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GoGreen",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"GreenSource": {},
									"vegfrtSqlTable": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/GoGreen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnZip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_zipFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_UnZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_zipFile')]",
				"[concat(variables('factoryId'), '/datasets/DS_UnZip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnZip_yelp_biz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_yelp_biz_zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_yelp_biz_unzip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_yelp_biz_zip')]",
				"[concat(variables('factoryId'), '/datasets/DS_yelp_biz_unzip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip_yelp_all')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YELP_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SINK_YELP_ALL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YELP_ALL')]",
				"[concat(variables('factoryId'), '/datasets/DS_SINK_YELP_ALL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/insertIntoCEM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "isactive",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_AzureBlobStorage",
										"type": "LinkedServiceReference"
									},
									"path": ""
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "brand",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "brand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "vin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "chasis_num",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "secviceContract",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "s_contract",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "cumprel",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cumprel",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "mtcom",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "mtcom",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "rem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rem",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "isactive",
											"type": "String"
										},
										"sink": {
											"name": "isActive",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_src_cemFull",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlCEMtable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_src_cemFull')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlCEMtable')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/anjiniratish@outlook.com/notebook_1"
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "notebook_out",
							"value": {
								"value": "@activity('Notebook1').output.runOutput",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "notebook_out",
							"value": {
								"value": "@activity('Notebook1').output.runError",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"notebook_out": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_Joins')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "join, select, filter, conditional split",
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ecommerce",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerOrders": {},
									"productDetails": {},
									"sink1": {},
									"sink2": {},
									"sink3": {},
									"sink4": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-04T14:17:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ecommerce')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ppl_filmRating')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "filmRating",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"adlsg2": {
										"fileName": "film.csv"
									},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2021-12-31T09:42:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/filmRating')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSEducation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "EducationDetails.json",
						"fileSystem": "json-datasets"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"details": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"age": {
										"type": "integer"
									},
									"results": {
										"type": "object",
										"properties": {
											"school": {
												"type": "integer"
											},
											"high_school": {
												"type": "integer"
											},
											"graduation": {
												"type": "integer"
											}
										}
									},
									"education": {
										"type": "object",
										"properties": {
											"graduation": {
												"type": "object",
												"properties": {
													"major": {
														"type": "string"
													},
													"minor": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlCEMtable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Skey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "brand",
						"type": "nvarchar"
					},
					{
						"name": "chasis_num",
						"type": "nvarchar"
					},
					{
						"name": "s_contract",
						"type": "nvarchar"
					},
					{
						"name": "cumprel",
						"type": "nvarchar"
					},
					{
						"name": "mtcom",
						"type": "nvarchar"
					},
					{
						"name": "rem",
						"type": "nvarchar"
					},
					{
						"name": "status",
						"type": "nvarchar"
					},
					{
						"name": "isActive",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "rcem"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_GoGreen_vegfruit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vegitable_priceDetails_2.csv",
						"fileSystem": "go-green-choice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "item",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "WT/QTY",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SINK_YELP_ALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "all",
						"fileSystem": "yelp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_UnZip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data",
						"fileSystem": "education-score-card"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YELP_ALL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "archive.zip",
						"container": "myratish"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_candidates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dob",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "candidates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_csv_filesource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsG2_jan",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"fileSystem": "csv-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsG2_jan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_education')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Sid",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "rslt_Scl",
						"type": "decimal",
						"precision": 20,
						"scale": 2
					},
					{
						"name": "rslt_Hgscl",
						"type": "decimal",
						"precision": 20,
						"scale": 2
					},
					{
						"name": "rslt_grad",
						"type": "decimal",
						"precision": 20,
						"scale": 2
					},
					{
						"name": "grad_maj",
						"type": "nvarchar"
					},
					{
						"name": "grad_min",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "education"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sink_store')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsG2_jan",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().name",
							"type": "Expression"
						},
						"folderPath": "files",
						"fileSystem": "dst"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsG2_jan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sink_vegfrt_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "item",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "WT_QT",
						"type": "nvarchar"
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "isActive",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "VEGFRT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_src_GoGreenDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "vegitableFruits_priceDetails.csv",
						"fileSystem": "go-green-choice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "item",
						"type": "String"
					},
					{
						"name": "name",
						"type": "String"
					},
					{
						"name": "WT/QTY",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_src_cem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "RCEM_UPDATE.CSV",
						"fileSystem": "manufacturing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cpais",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "vin",
						"type": "String"
					},
					{
						"name": "secviceContract",
						"type": "String"
					},
					{
						"name": "mttht",
						"type": "String"
					},
					{
						"name": "cumprel",
						"type": "String"
					},
					{
						"name": "mtcom",
						"type": "String"
					},
					{
						"name": "rem",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_src_cemFull')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "RCEM.CSV",
						"fileSystem": "manufacturing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cpais",
						"type": "String"
					},
					{
						"name": "brand",
						"type": "String"
					},
					{
						"name": "vin",
						"type": "String"
					},
					{
						"name": "secviceContract",
						"type": "String"
					},
					{
						"name": "mttht",
						"type": "String"
					},
					{
						"name": "cumprel",
						"type": "String"
					},
					{
						"name": "mtcom",
						"type": "String"
					},
					{
						"name": "rem",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_src_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsG2_jan",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "csv-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsG2_jan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_yelp_biz_unzip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "business",
						"fileSystem": "yelp"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_yelp_biz_zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "yelp_academic_dataset_business.json.zip",
						"folderPath": "business/zip",
						"fileSystem": "yelp"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_zipFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "archive.zip",
						"folderPath": "Raw",
						"fileSystem": "education-score-card"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "candidates.json",
						"fileSystem": "json-datasets"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"Age": {
										"type": "integer"
									},
									"DOB": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_adlsg2DVD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "transformed",
						"fileSystem": "dvdrentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_actors')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "actor.csv",
						"folderPath": "movies",
						"fileSystem": "dvdrentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "actor_id",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "last_update",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_adlsg2DVD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string",
						"defaultValue": "film.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "movies",
						"fileSystem": "dvdrentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "film_id",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "release_year",
						"type": "String"
					},
					{
						"name": "language_id",
						"type": "String"
					},
					{
						"name": "rental_duration",
						"type": "String"
					},
					{
						"name": "rental_rate",
						"type": "String"
					},
					{
						"name": "length",
						"type": "String"
					},
					{
						"name": "replacement_cost",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "last_update",
						"type": "String"
					},
					{
						"name": "special_features",
						"type": "String"
					},
					{
						"name": "fulltext",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_film')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "film.csv",
						"folderPath": "movies",
						"fileSystem": "dvdrentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "film_id",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "release_year",
						"type": "String"
					},
					{
						"name": "language_id",
						"type": "String"
					},
					{
						"name": "rental_duration",
						"type": "String"
					},
					{
						"name": "rental_rate",
						"type": "String"
					},
					{
						"name": "length",
						"type": "String"
					},
					{
						"name": "replacement_cost",
						"type": "String"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "last_update",
						"type": "String"
					},
					{
						"name": "special_features",
						"type": "String"
					},
					{
						"name": "fulltext",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_fim_actor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "film_actor.csv",
						"folderPath": "movies",
						"fileSystem": "dvdrentals"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "actor_id",
						"type": "String"
					},
					{
						"name": "film_id",
						"type": "String"
					},
					{
						"name": "last_update",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sink_cust_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "joineddata",
						"fileSystem": "testdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_ecommerce_cust')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer_orders.csv",
						"folderPath": "Ecommerce",
						"fileSystem": "testdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cid",
						"type": "String"
					},
					{
						"name": "cname",
						"type": "String"
					},
					{
						"name": "clocation",
						"type": "String"
					},
					{
						"name": "cprodid",
						"type": "String"
					},
					{
						"name": "orderdate;",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/source_ecommerce_prod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsg2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.csv",
						"folderPath": "Ecommerce",
						"fileSystem": "testdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "pprodid",
						"type": "String"
					},
					{
						"name": "prodname",
						"type": "String"
					},
					{
						"name": "proddesc;",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsg2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-6607169187072869.9.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "ratishDataBricks"
					},
					"existingClusterId": "0129-170044-o9r3x9gl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSynapseAnalytics')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSynapseAnalytics_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_PostgreSql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('LS_PostgreSql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Self-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Self-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_PostgreSql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('LS_PostgreSql2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Self-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Self-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adlsG2_jan')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_adlsG2_jan_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_adlsG2_jan_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adlsg2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_adlsg2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_adlsg2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Self-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoGreen')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_GoGreen_vegfruit",
								"type": "DatasetReference"
							},
							"name": "GreenSource"
						},
						{
							"dataset": {
								"referenceName": "DS_sink_vegfrt_table",
								"type": "DatasetReference"
							},
							"name": "vegfrtSqlTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_sink_vegfrt_table",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_sink_vegfrt_table",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "AddingIsActive"
						},
						{
							"name": "RenamedColumns"
						},
						{
							"name": "LookUPforexistingproducts"
						},
						{
							"name": "existingProducts"
						},
						{
							"name": "SelectNewColumnData"
						},
						{
							"name": "DerivedColumnIsActive"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\titem as string,\n\t\tname as string,\n\t\t{WT/QTY} as string,\n\t\tprice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> GreenSource\nsource(output(\n\t\tSKey as integer,\n\t\titem as string,\n\t\tname as string,\n\t\tWT_QT as string,\n\t\tprice as decimal(5,2),\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> vegfrtSqlTable\nGreenSource derive(isActive = 1) ~> AddingIsActive\nvegfrtSqlTable select(mapColumn(\n\t\tSKey,\n\t\titemSQL = item,\n\t\tnameSQL = name,\n\t\tWT_QTSQL = WT_QT,\n\t\tpriceSQL = price\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenamedColumns\nGreenSource, RenamedColumns lookup(item == itemSQL,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookUPforexistingproducts\nLookUPforexistingproducts filter(!isNull(itemSQL)) ~> existingProducts\nexistingProducts select(mapColumn(\n\t\tSKey,\n\t\titemSQL,\n\t\tnameSQL,\n\t\tWT_QTSQL,\n\t\tpriceSQL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewColumnData\nSelectNewColumnData derive(IsActive = 0) ~> DerivedColumnIsActive\nDerivedColumnIsActive alterRow(updateIf(true())) ~> AlterRow1\nAddingIsActive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSKey as integer,\n\t\titem as string,\n\t\tname as string,\n\t\tWT_QT as string,\n\t\tprice as decimal(5,2),\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\titem,\n\t\tname,\n\t\tWT_QT = {WT/QTY},\n\t\tprice,\n\t\tisActive\n\t)) ~> sink1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSKey as integer,\n\t\titem as string,\n\t\tname as string,\n\t\tWT_QT as string,\n\t\tprice as decimal(5,2),\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['SKey'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSKey,\n\t\titem = itemSQL,\n\t\tname = nameSQL,\n\t\tWT_QT = WT_QTSQL,\n\t\tprice = priceSQL,\n\t\tisActive = IsActive\n\t)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_GoGreen_vegfruit')]",
				"[concat(variables('factoryId'), '/datasets/DS_sink_vegfrt_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ecommerce')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "join, filter, select, conditional split",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "source_ecommerce_cust",
								"type": "DatasetReference"
							},
							"name": "customerOrders"
						},
						{
							"dataset": {
								"referenceName": "source_ecommerce_prod",
								"type": "DatasetReference"
							},
							"name": "productDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sink_cust_orders",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "sink_cust_orders",
								"type": "DatasetReference"
							},
							"name": "sink2"
						},
						{
							"dataset": {
								"referenceName": "sink_cust_orders",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "sink_cust_orders",
								"type": "DatasetReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "Join1"
						},
						{
							"name": "FilteredValues"
						},
						{
							"name": "Select1"
						},
						{
							"name": "ConditionalSplit1"
						}
					],
					"script": "source(output(\n\t\tcid as string,\n\t\tcname as string,\n\t\tclocation as string,\n\t\tcprodid as string,\n\t\t{orderdate;} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> customerOrders\nsource(output(\n\t\tpprodid as string,\n\t\tprodname as string,\n\t\t{proddesc;} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> productDetails\ncustomerOrders, productDetails join(cprodid == pprodid,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Join1\nSelect1 filter(isNull(prodname),\n\tpartitionBy('hash', 1)) ~> FilteredValues\nJoin1 select(mapColumn(\n\t\tcid,\n\t\tcname,\n\t\tclocation,\n\t\tcprodid,\n\t\t{orderdate;},\n\t\tprodname,\n\t\t{proddesc;}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFilteredValues split(equals(clocation, 'bangalore'),\n\tequals(clocation, 'hydrabad'),\n\tequals(clocation, 'pune'),\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit1@(bangalore, hydrabad, pune, others)\nConditionalSplit1@hydrabad sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hydrabad'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nConditionalSplit1@pune sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['pune'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nConditionalSplit1@others sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['other cities'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3\nConditionalSplit1@bangalore sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['bangalore'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/source_ecommerce_cust')]",
				"[concat(variables('factoryId'), '/datasets/source_ecommerce_prod')]",
				"[concat(variables('factoryId'), '/datasets/sink_cust_orders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/filmRating')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_adlsg2DVD",
								"type": "DatasetReference"
							},
							"name": "adlsg2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_adlsg2DVD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumnRating"
						}
					],
					"script": "source(output(\n\t\tfilm_id as short,\n\t\ttitle as string,\n\t\tdescription as string,\n\t\trelease_year as short,\n\t\tlanguage_id as boolean,\n\t\trental_duration as short,\n\t\trental_rate as double,\n\t\tlength as short,\n\t\treplacement_cost as double,\n\t\trating as string,\n\t\tlast_update as string,\n\t\tspecial_features as string,\n\t\tfulltext as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> adlsg2\nadlsg2 derive(ratingElaboration = iif(rating == 'PG-13','Parental guidance under 13',\r\niif(rating == 'PG','Parental guidance',\r\niif(rating == 'R','Adult audience',\r\niif(rating == 'G','General audience',\r\niif(rating == 'NC-17','above age 17','')))))) ~> DerivedColumnRating\nDerivedColumnRating sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['transformedData'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_adlsg2DVD')]",
				"[concat(variables('factoryId'), '/datasets/Sink_adlsg2DVD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rcem')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_src_cem",
								"type": "DatasetReference"
							},
							"name": "CSVsource"
						},
						{
							"dataset": {
								"referenceName": "DS_AzureSqlCEMtable",
								"type": "DatasetReference"
							},
							"name": "SQLcem"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSqlCEMtable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "DS_AzureSqlCEMtable",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "isActivederived"
						},
						{
							"name": "Rename"
						},
						{
							"name": "LookupinSQL"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tcpais as string,\n\t\tbrand as string,\n\t\tvin as string,\n\t\tsecviceContract as string,\n\t\tmttht as string,\n\t\tcumprel as string,\n\t\tmtcom as string,\n\t\trem as string,\n\t\tstatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> CSVsource\nsource(output(\n\t\tSkey as integer,\n\t\tbrand as string,\n\t\tchasis_num as string,\n\t\ts_contract as string,\n\t\tcumprel as string,\n\t\tmtcom as string,\n\t\trem as string,\n\t\tstatus as string,\n\t\tisActive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQLcem\nCSVsource derive(isActive = 1) ~> isActivederived\nSQLcem select(mapColumn(\n\t\tSQLSkey = Skey,\n\t\tSQLbrand = brand,\n\t\tSQLchasis_num = chasis_num,\n\t\tSQLs_contract = s_contract,\n\t\tSQLcumprel = cumprel,\n\t\tSQLmtcom = mtcom,\n\t\tSQLrem = rem,\n\t\tSQLstatus = status,\n\t\tSQLisActive = isActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nCSVsource, Rename lookup(vin == SQLchasis_num,\n\tmultiple: true,\n\tbroadcast: 'auto')~> LookupinSQL\nLookupinSQL filter(!isNull(status)) ~> Filter1\nFilter1 select(mapColumn(\n\t\tSQLSkey,\n\t\tSQLbrand,\n\t\tSQLchasis_num,\n\t\tSQLs_contract,\n\t\tSQLcumprel,\n\t\tSQLmtcom,\n\t\tSQLrem,\n\t\tSQLstatus\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 derive(isActive = 0) ~> DerivedColumn1\nDerivedColumn1 alterRow(updateIf(true())) ~> AlterRow1\nisActivederived sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSkey as integer,\n\t\tbrand as string,\n\t\tchasis_num as string,\n\t\ts_contract as string,\n\t\tcumprel as string,\n\t\tmtcom as string,\n\t\trem as string,\n\t\tstatus as string,\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSkey as integer,\n\t\tbrand as string,\n\t\tchasis_num as string,\n\t\ts_contract as string,\n\t\tcumprel as string,\n\t\tmtcom as string,\n\t\trem as string,\n\t\tstatus as string,\n\t\tisActive as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSkey = SQLSkey,\n\t\tbrand = SQLbrand,\n\t\tchasis_num = SQLchasis_num,\n\t\ts_contract = SQLs_contract,\n\t\tcumprel = SQLcumprel,\n\t\tmtcom = SQLmtcom,\n\t\trem = SQLrem,\n\t\tstatus = SQLstatus,\n\t\tisActive\n\t)) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_src_cem')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlCEMtable')]"
			]
		}
	]
}