{
	"name": "ecommerce",
	"properties": {
		"description": "join, filter, select, conditional split",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "source_ecommerce_cust",
						"type": "DatasetReference"
					},
					"name": "customerOrders"
				},
				{
					"dataset": {
						"referenceName": "source_ecommerce_prod",
						"type": "DatasetReference"
					},
					"name": "productDetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "sink_cust_orders",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "sink_cust_orders",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "sink_cust_orders",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "sink_cust_orders",
						"type": "DatasetReference"
					},
					"name": "sink4"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "FilteredValues"
				},
				{
					"name": "Select1"
				},
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tcid as string,\n\t\tcname as string,\n\t\tclocation as string,\n\t\tcprodid as string,\n\t\t{orderdate;} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> customerOrders\nsource(output(\n\t\tpprodid as string,\n\t\tprodname as string,\n\t\t{proddesc;} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> productDetails\ncustomerOrders, productDetails join(cprodid == pprodid,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Join1\nSelect1 filter(isNull(prodname),\n\tpartitionBy('hash', 1)) ~> FilteredValues\nJoin1 select(mapColumn(\n\t\tcid,\n\t\tcname,\n\t\tclocation,\n\t\tcprodid,\n\t\t{orderdate;},\n\t\tprodname,\n\t\t{proddesc;}\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nFilteredValues split(equals(clocation, 'bangalore'),\n\tequals(clocation, 'hydrabad'),\n\tequals(clocation, 'pune'),\n\tdisjoint: false,\n\tpartitionBy('hash', 1)) ~> ConditionalSplit1@(bangalore, hydrabad, pune, others)\nConditionalSplit1@hydrabad sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['hydrabad'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nConditionalSplit1@pune sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['pune'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nConditionalSplit1@others sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['other cities'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3\nConditionalSplit1@bangalore sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['bangalore'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink4"
		}
	}
}